import os

# To run locally:
# snakemake --snakefile Snakefile_acr --keep-going --cores 4 --config folder=.. --use-singularity --singularity-prefix ~/.singularity --singularity-args "--home ~"

# To visualise the pipeline
# snakemake --snakefile Snakefile_acr --config folder=.. --dag | sfdp -Tsvg > pipeline_acr.svg

localrules: all

ruleorder: pastml_loc_genotype > pastml_loc

folder = os.path.abspath(config["folder"])
data_dir = os.path.join(folder, 'data')

# choose one or more of the tree types below
tree_types = ['raxml', 'fast', 'phyml']

# The folder where the reconstructed ACR maps will be placed
maps_dir = 'maps'

locs = ['Location']


rule all:
    input:
        expand(os.path.join(data_dir, maps_dir, 'real', 'geo_map_{loc}.html'), loc=locs),
        expand(os.path.join(data_dir, maps_dir, 'resampled', '{n}', 'geo_map_{loc}.html'), loc=locs, n=range(5)),

        expand(os.path.join(data_dir, maps_dir, 'real', 'acr_map_{loc}_{type}_tree.dated.html'), type=tree_types, loc=locs),
        expand(os.path.join(data_dir, maps_dir, 'resampled', '{n}', 'acr_map_{loc}_{type}_tree.dated.html'),
        type=['raxml'], loc=locs, n=range(5)),

        expand(os.path.join(data_dir, maps_dir, 'real', 'acr_map_{loc}.genotype_{type}_tree.dated.html'),
        type=tree_types, loc=locs),

rule pastml_loc_genotype:
    '''
    Reconstructs tree ancestral states with PASTML and visualises the result.
    '''
    input:
        tree = os.path.join(data_dir, '{prefix}', '{tree}.nwk'),
        data = os.path.join(data_dir, '{prefix}', 'metadata.tab'),
        param = os.path.join(data_dir, 'pastml', '{prefix}', '{tree}', 'params.character_{loc}.method_MPPA.model_F81.tab')
    output:
        map = os.path.join(data_dir, maps_dir, '{prefix}', 'acr_map_{loc}.genotype_{tree}.html'),
        tree = os.path.join(data_dir, maps_dir, '{prefix}', 'acr_tree_{loc}.genotype_{tree}.html')
    threads: 3
    singularity: "docker://evolbioinfo/pastml:v1.9.15"
    params:
        mem = 4000,
        name = 'pastml_{loc}_gt',
        loc = '{loc}',
        date_col = 'year',
        wd = os.path.join(data_dir, 'pastml', '{prefix}', '{tree}'),
        tree = "{tree}",
        qos = "fast",
        prefix = "{prefix}"
    shell:
        """
        pastml --tree {input.tree} --data {input.data} \
        --html_compressed {output.map} --html {output.tree} --columns {params.loc} genotype  --name_column {params.loc} \
        --date_column {params.date_col} -v --work_dir {params.wd} --parameters {input.param} \
        --upload_to_itol --itol_tree_name {params.tree}_{params.prefix}
        """

rule pastml_loc:
    '''
    Reconstructs tree ancestral states with PASTML and visualises the result.
    '''
    input:
        tree = os.path.join(data_dir, '{prefix}', '{tree}.nwk'),
        data = os.path.join(data_dir, '{prefix}', 'metadata.tab'),
    output:
        map = os.path.join(data_dir, maps_dir, '{prefix}', 'acr_map_{loc,(Location|Country)}_{tree}.html'),
        tree = os.path.join(data_dir, maps_dir, '{prefix}', 'acr_tree_{loc}_{tree}.html'),
        param = os.path.join(data_dir, 'pastml', '{prefix}', '{tree}', 'params.character_{loc}.method_MPPA.model_F81.tab')
    threads: 2
    singularity: "docker://evolbioinfo/pastml:v1.9.15"
    params:
        mem = 4000,
        name = 'pastml_{loc}',
        loc = '{loc}',
        date_col = 'year',
        wd = os.path.join(data_dir, 'pastml', '{prefix}', '{tree}'),
        qos = "fast",
    shell:
        """
        pastml --tree {input.tree} --data {input.data} \
        --html_compressed {output.map} --html {output.tree} --columns {params.loc} \
        --date_column {params.date_col} -v --work_dir {params.wd}
        """

rule geomap:
    '''
    Reconstructs the geographical map coloured according to PastML categories.
    '''
    input:
        data = os.path.join(data_dir, '{prefix}', 'metadata.tab'),
    output:
        geo_map = os.path.join(data_dir, maps_dir, '{prefix}', 'geo_map_{loc}.html'),
    threads: 1
    params:
        mem = 4000,
        name = 'geomap_{loc}',
        loc = '{loc}',
        country_col = 'Country',
        qos = "fast"
    singularity: "docker://evolbioinfo/pastml:v1.9.15"
    shell:
        """
        geomap --data {input.data} --html {output.geo_map} --location {params.loc} --country {params.country_col}
        """